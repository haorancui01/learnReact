{"ast":null,"code":"var _jsxFileName = \"/home/jack/code/episode1/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\n//import { AppContext } from \"../App8\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  //const { username } = useContext(AppContext);\n  const {\n    data,\n    isLoading,\n    isError\n  } = useQuery([\"cat\"], () => {\n    return Axios.get(\"https://catfact.ninja/fact\").then(res => res.data);\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  return (\n    /*#__PURE__*/\n    //<h1> This is the home page and user is: {username} </h1>\n    _jsxDEV(\"h1\", {\n      children: [\" This is the home page and user is: \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data === null || data === void 0 ? void 0 : data.fact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Home, \"MSjTYoPrHxtduNXA41YFDDh1ZTg=\", false, function () {\n  return [useQuery];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useContext","useQuery","Axios","jsxDEV","_jsxDEV","Home","_s","data","isLoading","isError","get","then","res","children","fileName","_jsxFileName","lineNumber","columnNumber","fact","_c","$RefreshReg$"],"sources":["/home/jack/code/episode1/src/pages/Home.js"],"sourcesContent":["import { useContext  } from \"react\";\n//import { AppContext } from \"../App8\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Axios from \"axios\";\n\nexport const Home = () => {\n    //const { username } = useContext(AppContext);\n    const { data, isLoading, isError } = useQuery([\"cat\"], () => {\n        return Axios.get(\"https://catfact.ninja/fact\").then((res) => res.data);\n    });\n\n    if (isLoading) {\n        return <h1>Loading</h1>\n    }\n\n    return (\n        //<h1> This is the home page and user is: {username} </h1>\n        <h1> This is the home page and user is: <p>{data?.fact}</p></h1>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAS,OAAO;AACnC;AACA,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,MAAM;IACzD,OAAOC,KAAK,CAACQ,GAAG,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACL,IAAI,CAAC;EAC1E,CAAC,CAAC;EAEF,IAAIC,SAAS,EAAE;IACX,oBAAOJ,OAAA;MAAAS,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC3B;EAEA;IAAA;IACI;IACAb,OAAA;MAAAS,QAAA,GAAI,sCAAoC,eAAAT,OAAA;QAAAS,QAAA,EAAIN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;AAExE,CAAC;AAAAX,EAAA,CAdYD,IAAI;EAAA,QAEwBJ,QAAQ;AAAA;AAAAkB,EAAA,GAFpCd,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
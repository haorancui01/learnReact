{"ast":null,"code":"var _jsxFileName = \"/home/jack/code/learnReact/learnTs/learnts/src/components/Person.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Person = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Email: \", props.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Age: \", props.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" This person \", props.isMarried ? \"is\" : \"is not\", \" Married \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), props.friends.map(friend => {\n      /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: friend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Person;\nvar _c;\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"names":["Person","props","_jsxDEV","children","name","fileName","_jsxFileName","lineNumber","columnNumber","email","age","isMarried","friends","map","friend","_c","$RefreshReg$"],"sources":["/home/jack/code/learnReact/learnTs/learnts/src/components/Person.tsx"],"sourcesContent":["export interface Props {\n    name: string;\n    email: string;\n    age: number;\n    isMarried: boolean;\n    friends: string[];\n}\n\nexport const Person = (props: Props) => {\n\n\n    return (\n        <div>\n            <h1>Name: {props.name}</h1>\n            <h1>Email: {props.email}</h1>\n            <h1>Age: {props.age}</h1>\n            <h1> This person {props.isMarried ? \"is\" : \"is not\"} Married </h1>\n            {props.friends.map((friend: string) => {\n                <h1>{friend}</h1>\n            })}\n        </div>\n    )\n}"],"mappings":";;AAQA,OAAO,MAAMA,MAAM,GAAIC,KAAY,IAAK;EAGpC,oBACIC,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,GAAI,QAAM,EAACF,KAAK,CAACG,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3BN,OAAA;MAAAC,QAAA,GAAI,SAAO,EAACF,KAAK,CAACQ,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7BN,OAAA;MAAAC,QAAA,GAAI,OAAK,EAACF,KAAK,CAACS,GAAG;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBN,OAAA;MAAAC,QAAA,GAAI,eAAa,EAACF,KAAK,CAACU,SAAS,GAAG,IAAI,GAAG,QAAQ,EAAC,WAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjEP,KAAK,CAACW,OAAO,CAACC,GAAG,CAAEC,MAAc,IAAK;MACnC,aAAAZ,OAAA;QAAAC,QAAA,EAAKW;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACrB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAO,EAAA,GAdYf,MAAM;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}